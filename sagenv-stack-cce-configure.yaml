---

- name: Load vars
  hosts: "*"
  tasks:
    - name: Include vars
      include_vars:
        file: "{{ cce_provisioning_include_file | default('./vars/base_command_central.yaml') }}"
  tags:
    - always
    
- hosts: "{{ cce_provisioning_command_central_hosts | default('commandcentral') }}"
  tasks:
    - name: Root tasks
      block:
        # Let's assume the content is brought by other means because it's so huge, so no copying
        - import_role: 
            name: prepare-cce-provisoning
          vars:
            cce_prep_type: "content"
            cce_copy_content: true

        - import_role: 
            name: prepare-cce-provisoning
          vars:
            cce_prep_type: "code"
            cce_copy_content: true

        - import_role: 
            name: create-known-hosts
          vars:
            ssh_known_hosts_dir: /etc/ssh
            ssh_known_hosts_file: ssh_known_hosts
      become: true
      tags:
        - always
  
    - name: Non Root tasks
      block:
        - import_role: 
            name: configure-cce
          vars:
            config_item: tuning
            cce_configure_params: []
            cce_configure_params_secure: []
            configure_cce_force: true
            cce_jvm_memory_min: "{{ cce_jvm_memory_min }}"
            cce_jvm_memory_max: "{{ cce_jvm_memory_max }}"
            spm_jvm_memory_min: "{{ spm_jvm_memory_min }}"
            spm_jvm_memory_max: "{{ spm_jvm_memory_max }}"
          ignore_errors: yes
          tags:
            - configure
            - configure-tuning
        - import_role: 
            name: configure-cce
          vars:
            config_item: creds
            cce_configure_params: []
            cce_configure_params_secure: []
            configure_cce_force: true
          ignore_errors: yes
          tags:
            - configure
            - configure-creds
        - import_role: 
            name: configure-cce
          vars:
            config_item: licenses
            cce_configure_params:
              - name: "CC_SAG_LICENSE_DIR"
                value: "{{ cce_provisioning_licenses_path }}"
            cce_configure_params_secure: []
            configure_cce_force: true
          ignore_errors: yes
          tags:
            - configure
            - configure-licenses
        - import_role: 
            name: configure-cce
          vars:
            config_item: repo_images
            cce_configure_params:
              - name: "CC_SAG_IMAGE_DIR"
                value: "{{ cce_provisioning_images_path }}"
              - name: "CC_SAG_IMAGE_ACTION"
                value: "register"
            cce_configure_params_secure: []
            configure_cce_force: true
          ignore_errors: yes
          tags:
            - configure
            - configure-repo-images
        - import_role: 
            name: configure-cce
          vars:
            config_item: repo_products
            cce_configure_params:
              - name: "repo_products_version_major"
                value: "10"
              - name: "repo_products_version_minor"
                value: "5"
            cce_configure_params_secure: []
            configure_cce_force: true
          ignore_errors: yes
          tags:
            - configure
            - configure-repo-products
        - import_role:
            name: configure-cce
          vars:
            config_item: repo_products
            cce_configure_params:
              - name: "repo_products_version_major"
                value: "10"
              - name: "repo_products_version_minor"
                value: "3"
            cce_configure_params_secure: []
            configure_cce_force: true
          ignore_errors: yes
          tags:
            - configure
            - configure-repo-products
        - import_role:
            name: configure-cce
          vars:
            config_item: repo_products
            cce_configure_params:
              - name: "repo_products_version_major"
                value: "10"
              - name: "repo_products_version_minor"
                value: "1"
            cce_configure_params_secure: []
            configure_cce_force: true
          ignore_errors: yes
          tags:
            - configure
            - configure-repo-products
        - import_role:
            name: configure-cce
          vars:
            config_item: repo_fixes
            cce_configure_params: []
            cce_configure_params_secure: []
            configure_cce_force: true
          ignore_errors: yes
          tags:
            - configure
            - configure-repo-fixes
        - import_role: 
            name: configure-cce
          vars:
            config_item: update
            cce_configure_params: []
            cce_configure_params_secure: []
            configure_cce_force: true
          ignore_errors: yes
          tags:
            - configure
            - configure-update
      become: true
      become_user: "{{ cce_owner }}"
  post_tasks:
    - name: Non Root tasks
      block:
        - name: Wait for CCE ports to become open on the host
          wait_for:
            port: "{{ item }}"
            timeout: 600
          with_items:
            - 8090
            - 8091
      become: true
      tags:
        - postinstall